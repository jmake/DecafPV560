name: Docker Image CI

on: [push, workflow_dispatch]

jobs:

  build:

    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      
    steps:
    - name: OS 
      run: uname -a   
      
    - name: Dowloading repository ... 
      uses: actions/checkout@v2
      
    - name : Info ...
      run : | 
        
        mkdir BUILD 
        cp COMPILER.sh BUILD 
        ls -la  
        ls -la BUILD 
        pwd 

    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile.ci 
   
    
    - name: Executing Docker image 
      if: success()
      run: |
        echo "[DOCKER] BUILDING ..."
        IMAGE_NAME=i01a
        CONTAINER_NAME=c01a
        docker build . --file Dockerfile.ci -t $IMAGE_NAME
        IMAGE_ID=$(docker images --filter=reference=$IMAGE_NAME --format "{{.ID}}") 
        echo "IMAGE_ID:", $IMAGE_ID
        
        echo "[DOCKER] CREATING ..." 
        docker run \
          --name ${CONTAINER_NAME} \
          --volume ${{ github.workspace }}:/home \
          --workdir /home \
          --rm -i ${IMAGE_NAME} pwd
        
        #docker create ${IMAGE_NAME} --volume ${PWD}:/WORKING_DIRECTORY/ --name ${CONTAINER_NAME}
          
        #CONTAINER_ID=$(docker create ${IMAGE_NAME}:1.0 --volume ${{ github.workspace }}:/home --name ${CONTAINER_NAME})
        
        #docker start ${CONTAINER_NAME} 
        #docker ps 
        
        #docker run --rm --name ${CONTAINER_NAME} 
        #docker exec ${CONTAINER_NAME} ls -la 
        #
        #
        #echo "[DOCKER] EXECUTING ..."  
        #docker cp ${CONTAINER_ID}:/home/jovyan/work/from_docker.ipynb ./
        #docker run -v ${PWD}:/BUILD/ ${CONTAINER_ID}
        #docker start ${CONTAINER_ID} 
        #docker exec ${CONTAINER_ID} ls -la /WORKING_DIRECTORY 
        #
        #docker rm -v $CONTAINER_ID
        
        echo "[DOCKER] DONE!"         
        
        
